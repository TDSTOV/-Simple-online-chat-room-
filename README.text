# -Simple-online-chat-room-
该项目使用Microsoft visual C++2010 学习版编辑并测试。
代码结构
代码主要包含以下几个函数：
main(): 程序的入口函数，初始化Winsock库，创建服务器套接字，监听并接受客户端连接，创建子线程处理每个客户端的消息，等待线程结束后清理资源。
error_handling(): 错误处理函数，用于打印错误信息并退出程序。
ThreadProc(): 子线程函数，处理客户端消息，接收客户端发送的消息并将其发送给所有客户端，同时保存聊天记录到文件。
send_msg(): 将消息发送给所有客户端的函数。
cleanup_client(): 清理客户端连接的函数，关闭套接字并释放相关资源。
save_chat_log(): 保存聊天记录到文件的函数。
DisplayThread(): 显示菜单选项的线程函数，用于展示菜单选项并处理用户输入。
show_menu(): 显示菜单选项并根据用户输入执行相应操作。
flush_input_buffer(): 清空输入缓冲区的函数，用于清除用户输入后的多余字符。
InputThreadFunc(): 输入线程函数，用于监控用户输入。
server_group_chat(): 服务器群聊函数，用于将消息发送给所有客户端。

全局变量
代码中使用了一些全局变量来实现线程之间的通信和状态管理：
g_hEvent: 同步事件句柄，用于控制对全局资源的访问。
g_hInputThread: 输入线程句柄，用于监控用户输入。
g_hInputEvent: 输入事件句柄，用于控制输入线程的运行。
clnt_cnt: 客户端数量计数器。
clnt_socks[]: 客户端套接字数组，保存每个客户端的套接字。
terminateFlag[]: 客户端退出标志数组，标记每个客户端的退出状态。
in_group_chat: 群聊模式标志，表示服务器是否进入群聊模式。
hThread[]: 子线程句柄数组，保存每个子线程的句柄。
g_InputFlag: 输入标志，用于控制输入线程的运行。
clientSequence[]: 客户端序号数组，保存每个客户端在clnt_socks[]中的索引。

主要功能
该服务器程序具有以下主要功能：
接受客户端连接：在主线程中通过accept()函数接受客户端连接，创建子线程处理每个客户端的消息。
处理客户端消息：子线程通过recv()函数接收客户端发送的消息，然后调用send_msg()函数将消息发送给所有客户端，并保存聊天记录到文件。
群聊功能：通过输入线程和菜单选项，服务器可以进入群聊模式，接收管理员输入的消息并将其发送给所有客户端。
客户端管理：服务器可以列出当前连接的所有客户端，允许管理员选择踢出指定的客户端。

注意事项
该程序仅为示例代码，实际应用中可能需要进行更多的错误处理和安全性验证。
代码中使用的端口号为8888，可以根据需要进行修改。
程序在Windows环境下编译运行，需要链接WS2_32.lib库。
群聊模式下，服务器发送的消息会在消息前添加"来自服务器："前缀。
